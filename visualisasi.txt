<div class="message-content"><div class="message-text"><h3>Perbandingan Kode Go vs Java - Contoh Sederhana</h3>
<strong>Go (Golang) - Struktur Data &amp; Function</strong>  
<pre><code class="language-go">package main
<p>import "fmt"</p>
<p>// Struct sederhana untuk merepresentasikan orang<br>type Person struct {<br>    Name string<br>    Age  int<br>}</p>
<p>// Function untuk print detail orang<br>func PrintPerson(p Person) {<br>    fmt.Printf("Nama: %s, Umur: %d tahun\n", p.Name, p.Age)<br>}</p>
</code><p><code class="language-go">func main() {<br>    // Inisialisasi objek<br>    person := Person{<br>        Name: "Zaen",<br>        Age:  28,<br>    }<br>    <br>    // Panggil function<br>    PrintPerson(person)<br>}</code></p></pre><br><strong>Java - Class &amp; Method</strong>  <br><pre><code class="language-java">public class Person {<br>    private String name;<br>    private int age;<p></p>
<p>// Constructor<br>    public Person(String name, int age) {<br>        this.name = name;<br>        this.age = age;<br>    }</p>
<p>// Method untuk print detail<br>    public void printPerson() {<br>        System.out.println("Nama: " + name + ", Umur: " + age + " tahun");<br>    }</p>
</code><p><code class="language-java">public static void main(String[] args) {<br>        // Inisialisasi objek<br>        Person person = new Person("Zaen", 28);<br>        <br>        // Panggil method<br>        person.printPerson();<br>    }<br>}</code></p></pre><br><h3>Perbandingan Utama:</h3><br><ol><br><li><strong>Struktur Kode</strong></li><br></ol><br><ul><br><li><strong>Go</strong>: Minimal boilerplate, langsung pakai <code>package main</code> dan <code>func main()</code>.</li><br><li><strong>Java</strong>: Harus punya class wrapper dan <code>main</code> static di dalam class.</li><br></ul><br><ol><br><li><strong>Pembuatan Objek</strong></li><br></ol><br><ul><br><li><strong>Go</strong>:</li><br></ul><br>     <pre><code class="language-go">person := Person{Name: "Zaen", Age: 28}</code></pre><br><ul><br><li><strong>Java</strong>:</li><br></ul><br>     <pre><code class="language-java">Person person = new Person("Zaen", 28);</code></pre><br><ol><br><li><strong>Access Modifier</strong></li><br></ol><br><ul><br><li><strong>Go</strong>: Semua field otomatis public (tanpa keyword).</li><br><li><strong>Java</strong>: Perlu <code>private</code>/<code>public</code> (default <code>package-private</code>).</li><br></ul><br><ol><br><li><strong>Function vs Method</strong></li><br></ol><br><ul><br><li><strong>Go</strong>: Function bisa standalone atau method (dengan receiver).</li><br><li><strong>Java</strong>: Method harus terikat ke class.</li><br></ul><br><ol><br><li><strong>Error Handling</strong></li><br></ol><br><ul><br><li><strong>Go</strong>: Explicit dengan error return (<code>err</code>):</li><br></ul><br>     <pre><code class="language-go">result, err := someFunction()<br>     if err != nil { ... }</code></pre><br><ul><br><li><strong>Java</strong>: Exception handling dengan <code>try-catch</code>.</li><br></ul><br><ol><br><li><strong>Concurrency</strong></li><br></ol><br><ul><br><li><strong>Go</strong>: Built-in goroutine &amp; channel:</li><br></ul><br>     <pre><code class="language-go">go func() { ... }()</code></pre><br><ul><br><li><strong>Java</strong>: Pakai <code>Thread</code> atau <code>CompletableFuture</code>.</li><br></ul><br><h3>Output Keduanya:</h3><br><pre><code class="language-text">Nama: Zaen, Umur: 28 tahun</code></pre><br><h3>Kesimpulan Zaen:</h3><br><ul><br><li><strong>Go</strong>: Lebih simpel, cocok buat microservices &amp; concurrent apps.</li><br><li><strong>Java</strong>: Lebih rigid tapi powerful untuk enterprise apps.</li><br><li>Buat software engineer kayak lu, Go lebih "gaul" karena kode pendek, Java lebih formal. Pilih sesuai kebutuhan project! ðŸ˜Ž</li><br></ul><p></p></div>
    <div class="message-actions">
      <button class="copy-btn" title="Copy text">
        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><rect width="14" height="14" x="8" y="8" rx="2" ry="2"></rect><path d="M4 16c-1.1 0-2-.9-2-2V4c0-1.1.9-2 2-2h10c1.1 0 2 .9 2 2"></path></svg>
      </button>
    </div>
  </div>